name: Generator from request

env:
  python: 3.11

on: 
  workflow_dispatch:
    inputs:
      custom_settings:
        description: Url for custom settings json file

jobs:

  config:
    runs-on: ubuntu-latest
    outputs:
      amount: ${{ steps.settings.outputs.amount }}
      txt2txt: ${{ steps.settings.outputs.txt2txt }}
      txt2img: ${{ steps.settings.outputs.txt2img }}
      img2img: ${{ steps.settings.outputs.img2img }}
      imgUpscale: ${{ steps.settings.outputs.imgUpscale }}
      img2vid: ${{ steps.settings.outputs.img2vid }}

    steps:
    - name: Clone repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.python }}

    - name: Check flow settings file
      working-directory: scripts
      id: settings
      env:
        SETTINGS: ${{ github.event.inputs.custom_settings }}
        CONFIG_FOLDER: '../config'
      run: python parse_cfg.py
      
    - name: Upload settings
      uses: actions/upload-artifact@v4
      with:
        name: settings
        path: config/cfg.json


  txt2txt:
    runs-on: ubuntu-latest
    needs: config
    outputs:
      out: ${{ steps.out.outputs.out }}

    if: ${{ always() && !failure() && !cancelled() && fromJson(needs.config.outputs.txt2txt).active }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}

      - name: Download config
        uses: actions/download-artifact@v4
        with:
          name: settings
          path: config

      - name: Run script
        working-directory: scripts
        id: out
        env:
          CONFIG_FOLDER: '../config'
        run: python txt2txt.py


  txt2img:
    runs-on: ubuntu-latest
    needs: [config, txt2txt]
    outputs:
      out: ${{ steps.out.outputs.out }}

    if: ${{ always() && !failure() && !cancelled() && fromJson(needs.config.outputs.txt2img).active }}
    strategy:
      matrix:
        mix0: ${{ fromJson(needs.config.outputs.amount) }}
        ai: ${{ fromJson(needs.config.outputs.txt2img).ai }}
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}

      - name: Download config
        uses: actions/download-artifact@v4
        with:
          name: settings
          path: config

      - name: Run script
        working-directory: scripts
        id: out
        env:
          CONFIG_FOLDER: '../config'
        run: python txt2img.py
      

  img2img:
    runs-on: ubuntu-latest
    needs: [config, txt2txt, txt2img]
    outputs:
      out: ${{ steps.out.outputs.out }}

    if: ${{ always() && !failure() && !cancelled() && fromJson(needs.config.outputs.img2img).active }}
    strategy:
      matrix:
        ai: ${{ fromJson(needs.config.outputs.img2img).ai }}
        mix1: ${{ fromJson(needs.config.outputs.txt2img).ai }}
        mix0: ${{ fromJson(needs.config.outputs.amount) }}
          
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}

      - name: Download config
        uses: actions/download-artifact@v4
        with:
          name: settings
          path: config
          
      - name: Run script
        working-directory: scripts
        id: out
        env:
          CONFIG_FOLDER: '../config'
        run: python img2img.py


  img_upscale:
    runs-on: ubuntu-latest
    needs: [config, txt2img, img2img]
    outputs:
      out: ${{ steps.out.outputs.out }}
    
    if: ${{ always() && !failure() && !cancelled() && fromJson(needs.config.outputs.imgUpscale).active }}
    strategy:
      matrix:
        ai: ${{ fromJson(needs.config.outputs.imgUpscale).ai }}
        mix2: ${{ fromJson(needs.config.outputs.img2img).ai }}
        mix1: ${{ fromJson(needs.config.outputs.txt2img).ai }}
        mix0: ${{ fromJson(needs.config.outputs.amount) }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}

      - name: Download config
        uses: actions/download-artifact@v4
        with:
          name: settings
          path: config

      - name: Run script
        working-directory: scripts
        id: out
        env:
          CONFIG_FOLDER: '../config'
        run: python img_upscale.py


  img2vid:
    runs-on: ubuntu-latest
    needs: [config, txt2img, img2img]
    outputs:
      out: ${{ steps.out.outputs.out }}

    if: ${{ always() && !failure() && !cancelled() && fromJson(needs.config.outputs.img2vid).active }}
    strategy:
      matrix:
        ai: ${{ fromJson(needs.config.outputs.img2vid).ai }}
        mix2: ${{ fromJson(needs.config.outputs.img2img).ai }}
        mix1: ${{ fromJson(needs.config.outputs.txt2img).ai }}
        mix0: ${{ fromJson(needs.config.outputs.amount) }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.python }}

      - name: Download config
        uses: actions/download-artifact@v4
        with:
          name: settings
          path: config

      - name: Run script
        working-directory: scripts
        id: out
        env:
          CONFIG_FOLDER: '../config'
        run: python img2vid.py